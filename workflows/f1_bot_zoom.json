{
  "name": "f1_bot_zoom",
  "nodes": [
    {
      "parameters": {
        "errorMessage": "={{ $json.error.cause.message }}"
      },
      "id": "40dcdc14-b01b-4e74-be44-464efe69c990",
      "name": "No Recording/Transcript available",
      "type": "n8n-nodes-base.stopAndError",
      "position": [
        200,
        580
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ef149af8-7f9d-4e5a-8ccf-4a5f1e09eecc",
              "name": "transcript_file",
              "type": "string",
              "value": "={{ $json.recording_files.find(f => f.file_type === 'TRANSCRIPT').download_url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "eeac3626-b0e3-4ac0-8c26-f267ff610359",
      "name": "Filter transcript URL",
      "type": "n8n-nodes-base.set",
      "position": [
        360,
        120
      ],
      "typeVersion": 3.4,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "8cd0b38a-637e-4972-81f8-9e3dadd4c03d",
      "name": "Filter: Only 1 item",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        540,
        160
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "url": "={{ $json.transcript_file }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "zoomOAuth2Api",
        "options": {}
      },
      "id": "84898f5d-0b46-485d-a8ca-3e023404c0fc",
      "name": "Zoom: Get transcript file",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        720,
        -40
      ],
      "typeVersion": 4.2,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "6oDYSqSiiTqyALK2",
          "name": "Zoom account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "c0af2771-24fe-4cf8-b867-64becffa242e",
      "name": "Extract text from transcript file",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        900,
        120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "70019192-02ef-4b0a-a747-3ca5f46aeeaa",
              "name": "transcript",
              "type": "string",
              "value": "={{ $json.data.split('\\r\\n\\r\\n').slice(1).map(block => {\n    const lines = block.split('\\r\\n');\n    return lines.slice(2).join(' ');\n}).join('\\n') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "46f29dec-62d6-4309-80ff-57008a879962",
      "name": "Format transcript text",
      "type": "n8n-nodes-base.set",
      "position": [
        1080,
        120
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "url": "=https://api.zoom.us/v2/past_meetings/{{ $('basic-info').item.json.meetingId }}/participants",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "zoomOAuth2Api",
        "options": {}
      },
      "id": "688516ad-e026-4a6f-bb6a-c82079ef8129",
      "name": "Zoom: Get participants data",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1280,
        120
      ],
      "typeVersion": 4.2,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "6oDYSqSiiTqyALK2",
          "name": "Zoom account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cc51b7e4-d5c2-4cd4-9488-4d181eaaa02e",
              "name": "subject",
              "type": "string",
              "value": "=Meeting summary: {{ $('Zoom: Get data by meetingId').item.json.topic }} on {{ DateTime.fromISO($('Zoom: Get data by meetingId').item.json.start_time).toFormat('yyyy-MM-dd HH:mm') }}"
            },
            {
              "id": "f3940ea2-9084-4c25-828e-5ddaa428ec83",
              "name": "=to",
              "type": "string",
              "value": "={{ $('Zoom: Get participants data').item.json.participants[0].user_email }}"
            },
            {
              "id": "1211af5b-2240-44ce-9df7-63d93f57806e",
              "name": "body",
              "type": "string",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e0e7362c-6462-4c3d-9390-78ef7b79b813",
      "name": "Sort for mail delivery",
      "type": "n8n-nodes-base.set",
      "position": [
        1720,
        120
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "jsCode": "const items = [];\n\nfor (const item of $input.all()) {\n  const body = item.json.body;\n  if (!body) continue;\n\n  const getSection = (title) => {\n    const regex = new RegExp(`\\\\*\\\\*${title}:\\\\*\\\\*[\\\\s\\\\S]*?(?=\\\\*\\\\*|$)`, 'i');\n    const match = body.match(regex);\n    return match ? match[0].replace(new RegExp(`\\\\*\\\\*${title}:\\\\*\\\\*`, 'i'), '').trim() : '';\n  };\n\n  const title = body.match(/\\*\\*Meeting on (.*?)\\*\\*/)?.[1] || 'Meeting';\n  const participants = getSection('Participants');\n  const summary = getSection('Summary of the Meeting');\n\n  const html = `<html>\n<body style=\"font-family: Arial, sans-serif; max-width: 800px; margin: 20px;\">\n<h1 style=\"color: #2c3e50; border-bottom: 2px solid #3498db; padding-bottom: 10px;\">Meeting Minutes: ${title}</h1>\n\n${participants ? `\n<h2 style=\"color: #2c3e50; margin-top: 20px;\">Participants:</h2>\n<ul style=\"list-style-type: none; padding-left: 20px;\">\n${participants.split('\\n').map(p => `<li>${p.replace('- ', '')}</li>`).join('\\n')}\n</ul>` : ''}\n\n${summary ? `\n<h2 style=\"color: #2c3e50; margin-top: 20px;\">Meeting Summary:</h2>\n<p style=\"margin-left: 20px;\">${summary}</p>` : ''}\n\n</body>\n</html>`;\n\n  items.push({\n    json: {\n      html,\n      to: item.json.to,\n      subject: item.json.subject,\n    }\n  });\n}\n\nreturn items;"
      },
      "id": "68cdb518-26a9-40a4-99f6-1042a03811d8",
      "name": "Format to html",
      "type": "n8n-nodes-base.code",
      "position": [
        1880,
        120
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "fromEmail": "dante.luque@uai.edu.pe",
        "toEmail": "={{ $json.to }}",
        "subject": "={{ $json.subject }}",
        "html": "={{ $json.html }}",
        "options": {}
      },
      "id": "a936363c-3c7e-4d75-83c0-2b55e7ef84d9",
      "name": "Send meeting summary",
      "type": "n8n-nodes-base.emailSend",
      "position": [
        2040,
        120
      ],
      "webhookId": "81c4f081-f3d1-44c3-a344-3f735f1873b5",
      "typeVersion": 2.1,
      "credentials": {
        "smtp": {
          "id": "I5rrg8d03BADbJd9",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "method": "=GET",
        "url": "=https://api.zoom.us/v2/meetings/{{ $json.id }}/recordings",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "zoomOAuth2Api",
        "options": {}
      },
      "id": "eb6511f6-5a59-4091-ba79-bed85362ff7f",
      "name": "Zoom: Get transcripts data",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -80,
        460
      ],
      "typeVersion": 4.2,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "6oDYSqSiiTqyALK2",
          "name": "zoom-bot-UAI"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create a formal meeting minutes document from the following transcript and meeting details.\n\nMeeting Date: {{ $('Zoom: Get data by meetingId').item.json.start_time }} \nParticipants: {{ $json.participants.map(p => p.name + ' (' + p.user_email + ')').join(', ') }}\n\nTranscript:\n{{ $('Format transcript text').item.json.transcript }}\n\nPlease create the minutes in the following format:\n\nMeeting on [Date]\n\nParticipants:\n[List of participants with email addresses]\n\nSummary of the Meeting:\n[Brief and concise summary of the topics discussed]\n",
        "options": {}
      },
      "id": "8582b448-cded-4e76-bc4e-6e2ee637b022",
      "name": "Create meeting summary",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1400,
        300
      ],
      "typeVersion": 1.9
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1320,
        560
      ],
      "id": "5d88f22b-50b9-43d1-8798-bec9c1c509d8",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "g4S1njoK6pyWCNHg",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "recording-completed",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -900,
        640
      ],
      "id": "199f8209-0ac8-4cb6-9ba4-fb96b3e9ab0e",
      "name": "recording-completed",
      "webhookId": "a1a5385b-23c9-4096-be0f-66f260665f2f"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "get",
        "meetingId": "={{ $json.meetingId }}",
        "additionalFields": {}
      },
      "id": "14cda515-9d4b-4abd-a0e8-073a6089b47f",
      "name": "Zoom: Get data by meetingId",
      "type": "n8n-nodes-base.zoom",
      "position": [
        -320,
        600
      ],
      "typeVersion": 1,
      "alwaysOutputData": false,
      "executeOnce": false,
      "retryOnFail": false,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "6oDYSqSiiTqyALK2",
          "name": "Zoom account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const { object } = $json.body.payload;\n\nreturn {\n  json: {\n    meetingId: object.id,\n    topic: object.topic,\n    startTime: object.start_time,\n    uuid: object.uuid,\n    hostId: object.host_id\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -620,
        760
      ],
      "id": "b95dd658-489f-44db-a64b-5490e13a7621",
      "name": "basic-info"
    }
  ],
  "pinData": {},
  "connections": {
    "Format to html": {
      "main": [
        [
          {
            "node": "Send meeting summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter: Only 1 item": {
      "main": [
        [
          {
            "node": "Filter: Only 1 item",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Zoom: Get transcript file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter transcript URL": {
      "main": [
        [
          {
            "node": "Filter: Only 1 item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create meeting summary": {
      "main": [
        [
          {
            "node": "Sort for mail delivery",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format transcript text": {
      "main": [
        [
          {
            "node": "Zoom: Get participants data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort for mail delivery": {
      "main": [
        [
          {
            "node": "Format to html",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zoom: Get transcript file": {
      "main": [
        [
          {
            "node": "Extract text from transcript file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zoom: Get transcripts data": {
      "main": [
        [
          {
            "node": "Filter transcript URL",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Recording/Transcript available",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zoom: Get participants data": {
      "main": [
        [
          {
            "node": "Create meeting summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract text from transcript file": {
      "main": [
        [
          {
            "node": "Format transcript text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Create meeting summary",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Zoom: Get data by meetingId": {
      "main": [
        [
          {
            "node": "Zoom: Get transcripts data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recording-completed": {
      "main": [
        [
          {
            "node": "basic-info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "basic-info": {
      "main": [
        [
          {
            "node": "Zoom: Get data by meetingId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3b38f485-6520-4904-84e8-baf64fecc586",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e47916f16020ed4918dad89a6a8c70a52a5c0e995bce6bf690870884842c9bc6"
  },
  "id": "kokXj43s97Rp3tBr",
  "tags": []
}