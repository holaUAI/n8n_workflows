{
  "name": "f1_bot_zoom",
  "nodes": [
    {
      "parameters": {
        "errorMessage": "={{ $json.error.cause.message }}"
      },
      "id": "3d0bfdf6-8918-419d-ace7-7659cbcdd0b7",
      "name": "No Recording/Transcript available",
      "type": "n8n-nodes-base.stopAndError",
      "position": [
        0,
        180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ef149af8-7f9d-4e5a-8ccf-4a5f1e09eecc",
              "name": "transcript_file",
              "type": "string",
              "value": "={{ $json.recording_files.find(f => f.file_type === 'CC' && f.file_extension === 'VTT')?.download_url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "82c41eb9-797f-4e6b-b305-743cdf08148f",
      "name": "Filter transcript URL",
      "type": "n8n-nodes-base.set",
      "position": [
        0,
        0
      ],
      "typeVersion": 3.4,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "={{ $json.transcript_file }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "zoomOAuth2Api",
        "options": {}
      },
      "id": "15e2134c-5ec6-4562-8d43-6f5a78185170",
      "name": "Zoom: Get transcript file",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        180,
        0
      ],
      "typeVersion": 4.2,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "GvkMMGjMdcsNDBlN",
          "name": "zoom-bot-UAI"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "0b5ec6cb-c2b9-4fda-91be-a9e0dc68e286",
      "name": "Extract text from transcript file",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        360,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "70019192-02ef-4b0a-a747-3ca5f46aeeaa",
              "name": "transcript",
              "type": "string",
              "value": "={{ $json.data.split('\\r\\n\\r\\n').slice(1).map(block => {\n    const lines = block.split('\\r\\n');\n    return lines.slice(2).join(' ');\n}).join('\\n') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "86fbbf27-4ff9-4235-89d4-4e4c95c3adbd",
      "name": "Format transcript text",
      "type": "n8n-nodes-base.set",
      "position": [
        520,
        0
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "url": "=https://api.zoom.us/v2/past_meetings/{{ $('basic-info-depuration-I').item.json.meetingId }}/participants",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "zoomOAuth2Api",
        "options": {}
      },
      "id": "d42d309e-effe-44e8-83f5-c574822b0229",
      "name": "Zoom: Get participants data",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        700,
        0
      ],
      "typeVersion": 4.2,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "GvkMMGjMdcsNDBlN",
          "name": "zoom-bot-UAI"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cc51b7e4-d5c2-4cd4-9488-4d181eaaa02e",
              "name": "subject",
              "type": "string",
              "value": "=Meeting summary: {{ $('Zoom: Get data by meetingId').item.json.topic }} on {{ DateTime.fromISO($('Zoom: Get data by meetingId').item.json.start_time).toFormat('yyyy-MM-dd HH:mm') }}"
            },
            {
              "id": "f3940ea2-9084-4c25-828e-5ddaa428ec83",
              "name": "=to",
              "type": "string",
              "value": "=hola@uai.edu.pe, mariana.campos@autonomadeica.edu.pe, dany.mejia@autonomadeica.edu.pe, humberto.quispe@autonomadeica.edu.pe, yassir.bonifacio@autonomadeica.edu.pe, susana.atuncar@autonomadeica.edu.pe, angemar@autonomadeica.edu.pe, karina.garcia@autonomadeica.edu.pe"
            },
            {
              "id": "1211af5b-2240-44ce-9df7-63d93f57806e",
              "name": "body",
              "type": "string",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5652221d-74eb-40d5-90fd-7547e99d1883",
      "name": "Sort for mail delivery",
      "type": "n8n-nodes-base.set",
      "position": [
        1220,
        0
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "jsCode": "const items = [];\n\nfor (const item of $input.all()) {\n  const body = item.json.body;\n  if (!body) continue;\n\n  const formatMarkdown = (text) => {\n    return text\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>') // Negrita\n      .replace(/\\n/g, '<br>'); // Saltos de línea\n  };\n\n  const getSection = (sectionTitle) => {\n    const regex = new RegExp(`###\\\\s*${sectionTitle}\\\\s*\\\\n([\\\\s\\\\S]*?)(?=\\\\n###|\\\\n---|$)`, 'i');\n    const match = body.match(regex);\n    return match ? match[1].trim() : '';\n  };\n\n  const titleMatch = body.match(/\\*\\*📅 Fecha:\\*\\*\\s*(.*?)\\s\\s/);\n  const title = titleMatch ? titleMatch[1].trim() : \"Acta de Reunión\";\n\n  const resumen = getSection(\"📚 Resumen general de la clase\");\n  const observacion = getSection(\"🔎 Observación sobre la presencia y participación del docente\");\n  const citas = getSection(\"💬 Intervenciones destacadas o citas relevantes\");\n  const conclusion = getSection(\"🌟 Sugerencias para la mejora docente\");\n\n  const citasFormateadas = citas\n    .split(\"\\n\")\n    .filter(line => line.trim() !== \"\")\n    .map(line => `<p style=\"margin: 5px 0; color: #000000;\">${line.trim()}</p>`)\n    .join(\"\\n\");\n\n  const conclusionFormateada = formatMarkdown(\n    conclusion.replace(/^> /gm, '').trim()\n  );\n\n  const html = `<html>\n  <body style=\"font-family: Arial, sans-serif; max-width: 800px; margin: 20px; color: #000000;\">\n    <h1 style=\"color: #2c3e50; border-bottom: 2px solid #3498db; padding-bottom: 10px;\">Acta de Reunión - ${title}</h1>\n\n    ${resumen ? `\n      <h2 style=\"color: #2c3e50; margin-top: 20px;\">Resumen de la clase:</h2>\n      <p style=\"margin-left: 20px; color: #000000;\">${formatMarkdown(resumen)}</p>\n    ` : \"\"}\n\n    ${observacion ? `\n      <h2 style=\"color: #2c3e50; margin-top: 20px;\">Observación sobre la presencia del docente:</h2>\n      <p style=\"margin-left: 20px; color: #000000;\">${formatMarkdown(observacion)}</p>\n    ` : \"\"}\n\n    ${citas ? `\n      <h2 style=\"color: #2c3e50; margin-top: 20px;\">Citas destacadas:</h2>\n      <div style=\"background-color: #f8f8f8; padding: 15px; border-radius: 5px; margin-left: 20px;\">\n        ${citasFormateadas}\n      </div>\n    ` : \"\"}\n\n    ${conclusion ? `\n      <h2 style=\"color: #2c3e50; margin-top: 20px;\">Sugerencias para la mejora docente:</h2>\n      <p style=\"margin-left: 20px; color: #000000;\">${conclusionFormateada}</p>\n    ` : \"\"}\n  </body>\n</html>`;\n\n  items.push({\n    json: {\n      html,\n      to: item.json.to,\n      subject: item.json.subject,\n    },\n  });\n}\n\nreturn items;\n"
      },
      "id": "b54c9489-b159-4359-b633-69032e17b842",
      "name": "Format to html",
      "type": "n8n-nodes-base.code",
      "position": [
        1400,
        0
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "fromEmail": "tutor.ia@uai.edu.pe",
        "toEmail": "={{ $json.to }}",
        "subject": "={{ $json.subject }}",
        "html": "={{ $json.html }}",
        "options": {}
      },
      "id": "691e07e5-f131-4538-89ac-73f239161448",
      "name": "Send meeting summary",
      "type": "n8n-nodes-base.emailSend",
      "position": [
        1580,
        0
      ],
      "webhookId": "81c4f081-f3d1-44c3-a344-3f735f1873b5",
      "typeVersion": 2.1,
      "credentials": {
        "smtp": {
          "id": "WHrFKdYAukBTJHKs",
          "name": "SMTP tutor.ia@uai.edu.pe"
        }
      }
    },
    {
      "parameters": {
        "method": "=GET",
        "url": "=https://api.zoom.us/v2/meetings/{{ $json.id }}/recordings",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "zoomOAuth2Api",
        "options": {}
      },
      "id": "d848cfe9-80a1-46fb-be07-3fa4f0a8e12d",
      "name": "Zoom: Get transcripts data",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -200,
        20
      ],
      "typeVersion": 4.2,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "GvkMMGjMdcsNDBlN",
          "name": "zoom-bot-UAI"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Actúa como un supervisor académico que evalúa de forma objetiva, clara y constructiva la calidad de una clase grabada en Zoom. Tu tarea es redactar un acta formal que resuma el desarrollo de la sesión, identifique puntos de mejora realistas y valore las oportunidades de crecimiento docente. Mantén un tono profesional, imparcial y empático: no sanciones, orienta.\n\nUtiliza los siguientes datos:\n\n- **Fecha programada de la clase:** {{ $('basic-info-depuration-II').item.json.startTimeLocal }}  \n- **Hora en la que el host inició la reunión:** {{ $('basic-info-depuration-I').item.json.startTimeLocal }}  \n- **Docente (host):** {{ $('Zoom: Get transcripts data').item.json.host_email }}\n\n---\n\n**Transcript crudo con tiempo** (útil para análisis de presencia y participación):  \n{{ $('Extract text from transcript file').item.json.data }}\n\n**Transcript limpio** (útil para redacción del acta):  \n{{ $('Format transcript text').item.json.transcript }}\n\n---\n\nRedacta el acta con la siguiente estructura:\n\n---\n\n### 📝 Acta de Reunión\n\n**📅 Fecha:** [En formato DD/MM/AAAA]  \n**🕐 Hora programada:** [Hora programada de la clase]  \n**🕐 Hora real de inicio del host:** [Hora registrada de inicio de la reunión]  \n\n---\n\n### 📚 Resumen general de la clase  \nRedacta un párrafo **breve** que describa el enfoque temático (si lo hay), nivel de preparación, claridad de objetivos, estructura y participación. Menciona aspectos positivos o destacables, pero también debilidades o áreas de mejora, usando **negrita** para resaltar hallazgos clave. Mantén un tono constructivo y profesional.\n\n---\n\n### 🔎 Observación sobre la presencia y participación del docente  \n1. Especifica si el docente inició la reunión antes, a tiempo o después de la hora programada.  \n2. Indica el **momento exacto en el transcript** (en segundos o formato `00:MM:SS`) en el que el docente habló por primera vez.  \n3. Evalúa si hubo **dilatación excesiva entre intervenciones** (por ejemplo, si hay más de 20 minutos sin participación del docente). Si ocurre, destácalo como una señal de posible desconexión o falta de conducción activa.  \n4. Usa un tono objetivo y orientado a la mejora profesional.\n\n---\n\n### 💬 Intervenciones destacadas o citas relevantes  \nSelecciona máximo 6 líneas directamente copiadas textualmente del transcript crudo con timestamp incluido, sin reformular ni parafrasear.  \nCada línea debe mantenerse **idéntica** a como aparece en la transcripción, incluyendo comillas, puntuación, pausas u onomatopeyas.  \nPresenta cada cita como un ítem de lista con viñeta tipo guion (`-`), en este formato:\n\n- \"Texto exacto de la intervención.\" (`00:00:00`)\n\n❗ No agregues introducciones, no resumas ni cambies la redacción. Mantén el estilo literal.\n\n---\n\n### 🌟 Sugerencias para la mejora docente  \nBrinda **solo 2 recomendaciones** puntuales para mejorar el desempeño docente, usando emojis y tono motivador.  \nEjemplos:\n\n- 📌 Establecer un objetivo claro y compartido al inicio  \n- 🧑‍🏫 Asegurar una presencia activa y constante durante la clase  \n- 🧰 Incorporar ejemplos o recursos visuales que refuercen el contenido  \n- 🎯 Guiar la participación de los estudiantes con preguntas relevantes  \n- 🗂️ Estructurar la sesión en secciones claras: introducción, desarrollo y cierre  \n- ⏱️ Controlar mejor el tiempo para mantener el ritmo y cubrir todos los puntos clave\n\nFinaliza con un mensaje positivo:\n\n> ✨ Cada clase ofrece una oportunidad para mejorar. Con pequeños ajustes en la preparación y conducción, esta experiencia puede transformarse en una sesión significativa para los estudiantes. ¡Adelante!\n\n---\n\n### ✅ Instrucciones finales  \n- Sé profesional, preciso y respetuoso.  \n- Usa **negrita** para resaltar los hallazgos clave.  \n- No inventes datos si no están disponibles.  \n- Evita repetir ideas y mantén el informe claro y enfocado.\n",
        "options": {}
      },
      "id": "3172712a-671f-4a6b-9842-80be91b037c1",
      "name": "Create meeting summary",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        880,
        0
      ],
      "typeVersion": 1.9
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "recording-completed",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -960,
        20
      ],
      "id": "cbfe51f7-c04f-4cbb-85a1-a3baba6515e2",
      "name": "recording-completed",
      "webhookId": "a1a5385b-23c9-4096-be0f-66f260665f2f"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "get",
        "meetingId": "={{ $json.meetingId }}",
        "additionalFields": {}
      },
      "id": "4c1ad1b2-af85-4266-b658-c58f4832b163",
      "name": "Zoom: Get data by meetingId",
      "type": "n8n-nodes-base.zoom",
      "position": [
        -580,
        20
      ],
      "typeVersion": 1,
      "alwaysOutputData": false,
      "executeOnce": false,
      "retryOnFail": false,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "GvkMMGjMdcsNDBlN",
          "name": "zoom-bot-UAI"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        860,
        220
      ],
      "id": "8c0dc68e-6b60-494f-934e-0d27d07eface",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "sfJcS7f5MZWQ5awr",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "getAll",
        "returnAll": true,
        "filters": {}
      },
      "type": "n8n-nodes-base.zoom",
      "typeVersion": 1,
      "position": [
        -760,
        640
      ],
      "id": "143004f0-d7cf-4f18-82da-41384bfa45cc",
      "name": "Get many meetings",
      "credentials": {
        "zoomOAuth2Api": {
          "id": "GvkMMGjMdcsNDBlN",
          "name": "zoom-bot-UAI"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const { object } = $json.body.payload;\n\n// Convertir start_time UTC a hora local (Perú)\nconst startTimeUTC = new Date(object.start_time);\n\nconst options = {\n  timeZone: 'America/Lima',\n  hour12: false,\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit',\n  hour: '2-digit',\n  minute: '2-digit',\n};\n\nconst startTimeLocal = startTimeUTC.toLocaleString('es-PE', options); // ejemplo: \"27/06/2025, 10:30\"\n\nreturn {\n  json: {\n    meetingId: object.id,\n    topic: object.topic,\n    startTimeUTC: object.start_time,\n    startTimeLocal: startTimeLocal,\n    uuid: object.uuid,\n    hostId: object.host_id\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -760,
        20
      ],
      "id": "346269e3-0297-481b-91db-412257761b5f",
      "name": "basic-info-depuration-I"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $json;\n\n// Convertir start_time de UTC a hora local (Perú)\nconst startTimeUTC = new Date(data.start_time);\nconst options = {\n  timeZone: 'America/Lima',\n  hour12: false,\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit',\n  hour: '2-digit',\n  minute: '2-digit',\n};\nconst startTimeLocal = startTimeUTC.toLocaleString('es-PE', options); // Resultado: \"27/06/2025, 10:30\"\n\nreturn {\n  json: {\n    uuid: data.uuid,\n    id: data.id,\n    hostId: data.host_id,\n    hostEmail: data.host_email,\n    assistantId: data.assistant_id,\n    topic: data.topic,\n    type: data.type,\n    status: data.status,\n    startTimeUTC: data.start_time,\n    startTimeLocal: startTimeLocal,\n    duration: data.duration,\n    timezone: data.timezone,\n    agenda: data.agenda,\n    createdAt: data.created_at,\n    startUrl: data.start_url,\n    joinUrl: data.join_url\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        20
      ],
      "id": "78f4c6cb-559a-40b6-8590-5613e3c10917",
      "name": "basic-info-depuration-II"
    },
    {
      "parameters": {
        "jsCode": "return items\n  .sort((a, b) => new Date(b.json.created_at) - new Date(a.json.created_at))\n  .map(item => {\n    const now = new Date();\n    const start = new Date(item.json.start_time);\n    const end = new Date(start.getTime() + item.json.duration * 60000);\n\n    let estado = '';\n\n    if (now < start) {\n      estado = 'pendiente';\n    } else if (now >= start && now <= end) {\n      estado = 'en curso';\n    } else {\n      estado = 'finalizado';\n    }\n\n    return {\n      json: {\n        ...item.json,\n        estado,\n      }\n    };\n  });\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -580,
        640
      ],
      "id": "097f9666-4ef4-40aa-a887-79a82c5acac1",
      "name": "add status field"
    },
    {
      "parameters": {
        "path": "/api/reuniones",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -960,
        640
      ],
      "id": "d8fba7b4-2173-4864-ba4a-f5372a08569a",
      "name": "api/reuniones",
      "webhookId": "ff2fd24c-2119-42f3-bd3e-ec5e3921d1f3"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -360,
        640
      ],
      "id": "45217ccf-46f3-4765-8343-0ed550e89728",
      "name": "endpoint"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "meeting-started",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -960,
        400
      ],
      "id": "186b1947-9ede-4c3c-912e-bc7df93c55b3",
      "name": "meeting-started",
      "webhookId": "4fee8b5a-8ff7-4686-a80d-82669b720f37"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const { object } = $json.body.payload;\n\n// Convertir start_time UTC a hora local (Perú)\nconst startTimeUTC = new Date(object.start_time);\n\nconst options = {\n  timeZone: 'America/Lima',\n  hour12: false,\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit',\n  hour: '2-digit',\n  minute: '2-digit',\n};\n\nconst startTimeLocal = startTimeUTC.toLocaleString('es-PE', options); // ejemplo: \"27/06/2025, 10:30\"\n\nreturn {\n  json: {\n    meetingId: object.id,\n    topic: object.topic,\n    startTimeUTC: object.start_time,\n    startTimeLocal: startTimeLocal,\n    uuid: object.uuid,\n    hostId: object.host_id\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -720,
        400
      ],
      "id": "2c94d0eb-4a55-4bba-a449-9385a033a8c5",
      "name": "basic-info"
    },
    {
      "parameters": {
        "url": "=https://api.zoom.us/v2/past_meetings/{{ $('basic-info').item.json.meetingId }}/participants",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "zoomOAuth2Api",
        "options": {}
      },
      "id": "910d657e-d02a-45d9-9edc-47f2ffff5f4b",
      "name": "Zoom: Get participants",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -540,
        400
      ],
      "typeVersion": 4.2,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "GvkMMGjMdcsNDBlN",
          "name": "zoom-bot-UAI"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const hostId = $('basic-info').item.json.hostId;\nconst participantes = $json.participants;\n\nconst anfitrion = participantes.find(p => p.id === hostId);\n\nreturn {\n  json: {\n    hostEmail: anfitrion?.user_email || null,\n    hostName: anfitrion?.name || null,\n    hostId: anfitrion?.id || null\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -360,
        400
      ],
      "id": "066cde37-481a-46e1-92b7-f1ce7779acd6",
      "name": "get-host"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cc51b7e4-d5c2-4cd4-9488-4d181eaaa02e",
              "name": "subject",
              "type": "string",
              "value": "=!Hola! Permite que tus alumnos califiquen tu clase de hoy😄"
            },
            {
              "id": "f3940ea2-9084-4c25-828e-5ddaa428ec83",
              "name": "=to",
              "type": "string",
              "value": "={{ $('get-host').item.json.hostEmail }}"
            },
            {
              "id": "1211af5b-2240-44ce-9df7-63d93f57806e",
              "name": "body",
              "type": "string",
              "value": "=<html>\n  <body style=\"font-family: 'Segoe UI', sans-serif; background-color: #f9f9f9; padding: 30px; color: #333;\">\n    <div style=\"max-width: 600px; margin: auto; background: #ffffff; border-radius: 8px; box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05); padding: 25px;\">\n      <h2 style=\"color: #3498db;\">¡Hola, {{ $json.hostName }}! 😄</h2>\n      <p style=\"font-size: 16px; line-height: 1.6;\">\n        Solo un recordatorio: cuando termines tu clase, ¿podrías compartir este enlace con tus estudiantes? 🥰\n      </p>\n\n      <p style=\"text-align: center; margin: 30px 0;\">\n        <a href=\"https://kzmkma7an1v3wzcld2kj.lite.vusercontent.net/\" \n           style=\"display: inline-block; background-color: #3498db; color: white; padding: 12px 24px; border-radius: 6px; text-decoration: none; font-weight: bold;\">\n          👉 Formulario de retroalimentación\n        </a>\n      </p>\n\n      <p style=\"font-size: 16px; line-height: 1.6;\">\n        La opinión de tus estudiantes nos ayuda a crecer juntos y a que sus sesiones sean cada vez más dinámicas.\n      </p>\n\n      <p style=\"font-style: italic; color: #666;\">\n        No hay prisa, pero recuerda que un pequeño gesto de tu parte impulsa mucho nuestro trabajo conjunto. ¡Gracias por tu dedicación! 💪✨\n      </p>\n    </div>\n  </body>\n</html>\n"
            },
            {
              "id": "de580983-c982-46c8-94c2-395580b1bee7",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "64fbb5df-c9a4-4715-834f-01fd95141a6f",
      "name": "Sort for mail",
      "type": "n8n-nodes-base.set",
      "position": [
        -160,
        400
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "jsCode": "const items = [];\n\nfor (const item of $input.all()) {\n  const hostName = $('get-host').first().json.hostName;\n  const formLink = \"https://kzmkma7an1v3wzcld2kj.lite.vusercontent.net/\";\n\n  const html = `\n  <html>\n    <body style=\"font-family: 'Segoe UI', sans-serif; background-color: #f9f9f9; padding: 30px; color: #333;\">\n      <div style=\"max-width: 600px; margin: auto; background: #ffffff; border-radius: 8px; box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05); padding: 25px;\">\n        <h2 style=\"color: #3498db;\">¡Hola, ${hostName}! 😄</h2>\n        <p style=\"font-size: 16px; line-height: 1.6;\">\n          Solo un recordatorio: cuando termines tu clase, ¿podrías compartir este enlace con tus estudiantes? 🥰\n        </p>\n\n        <p style=\"text-align: center; margin: 30px 0;\">\n          <a href=\"${formLink}\" \n             style=\"display: inline-block; background-color: #3498db; color: white; padding: 12px 24px; border-radius: 6px; text-decoration: none; font-weight: bold;\">\n            👉 Formulario de retroalimentación\n          </a>\n        </p>\n\n        <p style=\"font-size: 16px; line-height: 1.6;\">\n          La opinión de tus estudiantes nos ayuda a crecer juntos y a que sus sesiones sean cada vez más dinámicas.\n        </p>\n\n        <p style=\"font-style: italic; color: #666;\">\n          No hay prisa, pero recuerda que un pequeño gesto de tu parte impulsa mucho nuestro trabajo conjunto. ¡Gracias por tu dedicación! 💪✨\n        </p>\n      </div>\n    </body>\n  </html>`;\n\n  items.push({\n    json: {\n      html,\n      to: item.json.to,\n      subject: item.json.subject,\n    }\n  });\n}\n\nreturn items;\n"
      },
      "id": "9f628d79-ccdb-48f2-8881-044f2d4e91cf",
      "name": "to html",
      "type": "n8n-nodes-base.code",
      "position": [
        60,
        400
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "fromEmail": "tutor.ia@uai.edu.pe",
        "toEmail": "={{ $json.to }}",
        "subject": "={{ $json.subject }}",
        "html": "={{ $json.html }}",
        "options": {}
      },
      "id": "79240d25-db2b-4243-8e88-44955a8ef8a4",
      "name": "Send url for students",
      "type": "n8n-nodes-base.emailSend",
      "position": [
        260,
        400
      ],
      "webhookId": "81c4f081-f3d1-44c3-a344-3f735f1873b5",
      "typeVersion": 2.1,
      "credentials": {
        "smtp": {
          "id": "WHrFKdYAukBTJHKs",
          "name": "SMTP tutor.ia@uai.edu.pe"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Format to html": {
      "main": [
        [
          {
            "node": "Send meeting summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter transcript URL": {
      "main": [
        [
          {
            "node": "Zoom: Get transcript file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create meeting summary": {
      "main": [
        [
          {
            "node": "Sort for mail delivery",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format transcript text": {
      "main": [
        [
          {
            "node": "Zoom: Get participants data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort for mail delivery": {
      "main": [
        [
          {
            "node": "Format to html",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zoom: Get transcript file": {
      "main": [
        [
          {
            "node": "Extract text from transcript file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zoom: Get transcripts data": {
      "main": [
        [
          {
            "node": "Filter transcript URL",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Recording/Transcript available",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zoom: Get participants data": {
      "main": [
        [
          {
            "node": "Create meeting summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract text from transcript file": {
      "main": [
        [
          {
            "node": "Format transcript text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zoom: Get data by meetingId": {
      "main": [
        [
          {
            "node": "basic-info-depuration-II",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recording-completed": {
      "main": [
        [
          {
            "node": "basic-info-depuration-I",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Create meeting summary",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get many meetings": {
      "main": [
        [
          {
            "node": "add status field",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "basic-info-depuration-I": {
      "main": [
        [
          {
            "node": "Zoom: Get data by meetingId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "basic-info-depuration-II": {
      "main": [
        [
          {
            "node": "Zoom: Get transcripts data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "add status field": {
      "main": [
        [
          {
            "node": "endpoint",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "api/reuniones": {
      "main": [
        [
          {
            "node": "Get many meetings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "meeting-started": {
      "main": [
        [
          {
            "node": "basic-info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "basic-info": {
      "main": [
        [
          {
            "node": "Zoom: Get participants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zoom: Get participants": {
      "main": [
        [
          {
            "node": "get-host",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-host": {
      "main": [
        [
          {
            "node": "Sort for mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort for mail": {
      "main": [
        [
          {
            "node": "to html",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "to html": {
      "main": [
        [
          {
            "node": "Send url for students",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6155250a-d1d5-4856-8d44-4471b4501055",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "44e428a6215583099d0174473a6ca8f47ec4ace791e57f79f0b224a51c9b8d2b"
  },
  "id": "bI7bsPaowQ7D3Y34",
  "tags": []
}