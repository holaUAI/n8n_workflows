{
  "name": "f1_n8n_zoom",
  "nodes": [
    {
      "parameters": {
        "errorMessage": "={{ $json.error.cause.message }}"
      },
      "id": "685fb3c4-9db6-4b1b-8176-a28d3a98b2c7",
      "name": "No Recording/Transcript available",
      "type": "n8n-nodes-base.stopAndError",
      "position": [
        -2220,
        -60
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ef149af8-7f9d-4e5a-8ccf-4a5f1e09eecc",
              "name": "transcript_file",
              "type": "string",
              "value": "={{ $json.recording_files.find(f => f.file_type === 'CC' && f.file_extension === 'VTT')?.download_url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c7a8efbd-df49-41b3-adf0-2b88ea7a3f30",
      "name": "Filter transcript URL",
      "type": "n8n-nodes-base.set",
      "position": [
        -2220,
        -240
      ],
      "typeVersion": 3.4,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "={{ $json.transcript_file }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "zoomOAuth2Api",
        "options": {}
      },
      "id": "f50c465f-ec79-4c7f-8667-a6df1d938e79",
      "name": "Zoom: Get transcript file",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2040,
        -240
      ],
      "typeVersion": 4.2,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "GvkMMGjMdcsNDBlN",
          "name": "zoom-bot-UAI"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "7914e822-2329-4694-a06b-4d1e7a206e9e",
      "name": "Extract text from transcript file",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        -1860,
        -240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "70019192-02ef-4b0a-a747-3ca5f46aeeaa",
              "name": "transcript",
              "type": "string",
              "value": "={{ $json.data.split('\\r\\n\\r\\n').slice(1).map(block => {\n    const lines = block.split('\\r\\n');\n    return lines.slice(2).join(' ');\n}).join('\\n') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "843c06bb-37bc-4e26-a31c-69297936b1a7",
      "name": "Format transcript text",
      "type": "n8n-nodes-base.set",
      "position": [
        -1700,
        -240
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "url": "=https://api.zoom.us/v2/past_meetings/{{ $('basic-info-depuration-I').item.json.meetingId }}/participants",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "zoomOAuth2Api",
        "options": {}
      },
      "id": "2ca45b86-a705-4363-848d-3b38703fbf51",
      "name": "Zoom: Get participants data",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1520,
        -240
      ],
      "typeVersion": 4.2,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "GvkMMGjMdcsNDBlN",
          "name": "zoom-bot-UAI"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cc51b7e4-d5c2-4cd4-9488-4d181eaaa02e",
              "name": "subject",
              "type": "string",
              "value": "=📢 Resumen de la Clase: \"{{ $('Zoom: Get data by meetingId').item.json.topic }}\" - {{ DateTime.fromISO($('Zoom: Get data by meetingId').item.json.start_time).toFormat('yyyy-MM-dd HH:mm') }}"
            },
            {
              "id": "f3940ea2-9084-4c25-828e-5ddaa428ec83",
              "name": "=to",
              "type": "string",
              "value": "=hola@uai.edu.pe, mariana.campos@autonomadeica.edu.pe, dany.mejia@autonomadeica.edu.pe, humberto.quispe@autonomadeica.edu.pe, yassir.bonifacio@autonomadeica.edu.pe, susana.atuncar@autonomadeica.edu.pe, angemar@autonomadeica.edu.pe, karina.garcia@autonomadeica.edu.pe"
            },
            {
              "id": "1211af5b-2240-44ce-9df7-63d93f57806e",
              "name": "body",
              "type": "string",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b7a641dd-0590-432f-9bd3-a5e91428564f",
      "name": "Sort for mail delivery",
      "type": "n8n-nodes-base.set",
      "position": [
        -920,
        -220
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "jsCode": "const items = [];\nfor (const item of $input.all()) {\n  const body = item.json.body;\n  if (!body) continue;\n  \n  const formatMarkdown = (text) => {\n    return text\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>') // Negrita\n      .replace(/\\n/g, '<br>'); // Saltos de línea\n  };\n  \n  const getSection = (sectionTitle) => {\n    const regex = new RegExp(`###\\\\s*${sectionTitle}\\\\s*\\\\n([\\\\s\\\\S]*?)(?=\\\\n###|\\\\n---|$)`, 'i');\n    const match = body.match(regex);\n    return match ? match[1].trim() : '';\n  };\n  \n  const titleMatch = body.match(/\\*\\*📅 Fecha:\\*\\*\\s*(.*?)\\s\\s/);\n  const title = titleMatch ? titleMatch[1].trim() : \"Acta de Reunión\";\n  \n  const resumen = getSection(\"📚 Resumen general de la clase\");\n  const observacion = getSection(\"🔎 Observación sobre la presencia y participación del docente\");\n  const citas = getSection(\"💬 Intervenciones destacadas o citas relevantes\");\n  const conclusion = getSection(\"🌟 Sugerencias para la mejora docente\");\n  \n  const citasFormateadas = citas\n    .split(\"\\n\")\n    .filter(line => line.trim() !== \"\")\n    .map(line => `<p style=\"margin: 8px 0; color: #2c3e50; font-style: italic; position: relative; padding-left: 20px;\">\"${line.trim()}\"</p>`)\n    .join(\"\\n\");\n  \n  const conclusionFormateada = formatMarkdown(\n    conclusion.replace(/^> /gm, '').trim()\n  );\n  \n  const html = `\n<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Acta de Reunión - ${title}</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            min-height: 100vh;\n            padding: 20px;\n            color: #333;\n        }\n        \n        .container {\n            max-width: 800px;\n            margin: 0 auto;\n            background: white;\n            border-radius: 20px;\n            box-shadow: 0 20px 40px rgba(0,0,0,0.1);\n            overflow: hidden;\n            animation: slideIn 0.8s ease-out;\n        }\n        \n        @keyframes slideIn {\n            from { opacity: 0; transform: translateY(30px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);\n            padding: 30px;\n            text-align: center;\n            color: white;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .header::before {\n            content: '';\n            position: absolute;\n            top: -50%;\n            left: -50%;\n            width: 200%;\n            height: 200%;\n            background: radial-gradient(circle, rgba(255,255,255,0.1) 1px, transparent 1px);\n            background-size: 20px 20px;\n            animation: float 20s linear infinite;\n        }\n        \n        @keyframes float {\n            0% { transform: rotate(0deg) translateX(0px); }\n            100% { transform: rotate(360deg) translateX(10px); }\n        }\n        \n        .logo {\n            position: relative;\n            z-index: 2;\n            margin-bottom: 20px;\n        }\n        \n        .logo img {\n            width: 80px;\n            height: 80px;\n            width: auto;\n            height: auto;\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0,0,0,0.2);\n            background: white;\n            padding: 5px;\n            animation: logoGlow 2s ease-in-out infinite alternate;\n        }\n        \n        @keyframes logoGlow {\n            from { box-shadow: 0 4px 15px rgba(0,0,0,0.2); }\n            to { box-shadow: 0 4px 20px rgba(255,255,255,0.3); }\n        }\n        \n        .header h1 {\n            font-size: 28px;\n            margin-bottom: 10px;\n            position: relative;\n            z-index: 1;\n        }\n        \n        .header .date {\n            font-size: 18px;\n            opacity: 0.9;\n            position: relative;\n            z-index: 1;\n        }\n        \n        .content {\n            padding: 40px;\n        }\n        \n        .section {\n            margin-bottom: 35px;\n            animation: fadeIn 0.6s ease-out;\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(20px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        .section-title {\n            font-size: 22px;\n            color: #2c3e50;\n            margin-bottom: 20px;\n            padding-bottom: 10px;\n            border-bottom: 3px solid #3498db;\n            display: flex;\n            align-items: center;\n            gap: 10px;\n        }\n        \n        .section-content {\n            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n            padding: 25px;\n            border-radius: 15px;\n            border-left: 5px solid #3498db;\n            line-height: 1.8;\n            font-size: 16px;\n            color: #2c3e50;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .section-content::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);\n            animation: shine 3s infinite;\n        }\n        \n        @keyframes shine {\n            0% { left: -100%; }\n            100% { left: 100%; }\n        }\n        \n        .citas-section {\n            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n            color: #2c3e50;\n            padding: 25px;\n            border-radius: 15px;\n            border-left: 5px solid #9b59b6;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .citas-section::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);\n            animation: shine 4s infinite;\n        }\n        \n        .citas-section p {\n            color: #2c3e50 !important;\n            margin: 12px 0;\n            font-size: 16px;\n            position: relative;\n            z-index: 1;\n        }\n        \n        .citas-section p::before {\n            content: '💬';\n            position: absolute;\n            left: -20px;\n            color: #9b59b6;\n        }\n        \n        .conclusion-section {\n            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n            color: #2c3e50;\n            padding: 25px;\n            border-radius: 15px;\n            border-left: 5px solid #e74c3c;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .conclusion-section::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);\n            animation: shine 5s infinite;\n        }\n        \n        .conclusion-section .section-content {\n            background: transparent;\n            border: none;\n            padding: 0;\n            color: #2c3e50;\n            font-size: 16px;\n            position: relative;\n            z-index: 1;\n        }\n        \n        .footer {\n            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);\n            color: white;\n            padding: 25px;\n            text-align: center;\n            font-size: 14px;\n        }\n        \n        .icon {\n            font-size: 24px;\n            margin-right: 8px;\n        }\n        \n        @media (max-width: 600px) {\n            .container {\n                margin: 10px;\n                border-radius: 15px;\n            }\n            \n            .header, .content {\n                padding: 20px;\n            }\n            \n            .header h1 {\n                font-size: 24px;\n            }\n            \n            .section-title {\n                font-size: 20px;\n            }\n            \n            .logo img {\n                max-width: 100px;\n                max-height: 70px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <div class=\"logo\">\n                <img src=\"https://drive.google.com/uc?id=1r2eXR7N8-MyJ0jyqGwosqjI_hXo6OABZ\" alt=\"Logo Tutor.IA\" onerror=\"this.style.display='none'\">\n            </div>\n            <h1>📋 Detalles de la Sesion</h1>\n            <div class=\"date\">📅 ${title}</div>\n        </div>\n        \n        <div class=\"content\">\n            ${resumen ? `\n                <div class=\"section\">\n                    <h2 class=\"section-title\">\n                        <span class=\"icon\">📚</span>\n                        Resumen de la clase\n                    </h2>\n                    <div class=\"section-content\">\n                        ${formatMarkdown(resumen)}\n                    </div>\n                </div>\n            ` : \"\"}\n            \n            ${observacion ? `\n                <div class=\"section\">\n                    <h2 class=\"section-title\">\n                        <span class=\"icon\">🔎</span>\n                        Observación sobre la presencia del docente\n                    </h2>\n                    <div class=\"section-content\">\n                        ${formatMarkdown(observacion)}\n                    </div>\n                </div>\n            ` : \"\"}\n            \n            ${citas ? `\n                <div class=\"section\">\n                    <h2 class=\"section-title\">\n                        <span class=\"icon\">💬</span>\n                        Citas destacadas\n                    </h2>\n                    <div class=\"citas-section\">\n                        ${citasFormateadas}\n                    </div>\n                </div>\n            ` : \"\"}\n            \n            ${conclusion ? `\n                <div class=\"section\">\n                    <h2 class=\"section-title\">\n                        <span class=\"icon\">🌟</span>\n                        Sugerencias para la mejora docente\n                    </h2>\n                    <div class=\"conclusion-section\">\n                        <div class=\"section-content\">\n                            ${conclusionFormateada}\n                        </div>\n                    </div>\n                </div>\n            ` : \"\"}\n        </div>\n        \n        <div class=\"footer\">\n            <p>© 2025 Tutor.IA - Acta generada automáticamente</p>\n        </div>\n    </div>\n</body>\n</html>`;\n\n  items.push({\n    json: {\n      html,\n      to: item.json.to,\n      subject: item.json.subject,\n    },\n  });\n}\n\nreturn items;"
      },
      "id": "06eda6f2-9a20-4b0c-8d2f-d07e69578dde",
      "name": "Format to html",
      "type": "n8n-nodes-base.code",
      "position": [
        -640,
        -240
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "fromEmail": "tutor.ia@uai.edu.pe",
        "toEmail": "={{ $json.to }}",
        "subject": "={{ $json.subject }}",
        "html": "={{ $json.html }}",
        "options": {}
      },
      "id": "006ce1e4-d0a2-49c7-a3de-454c86500687",
      "name": "Send meeting summary",
      "type": "n8n-nodes-base.emailSend",
      "position": [
        -460,
        -240
      ],
      "webhookId": "81c4f081-f3d1-44c3-a344-3f735f1873b5",
      "typeVersion": 2.1,
      "credentials": {
        "smtp": {
          "id": "WHrFKdYAukBTJHKs",
          "name": "SMTP tutor.ia@uai.edu.pe"
        }
      }
    },
    {
      "parameters": {
        "method": "=GET",
        "url": "=https://api.zoom.us/v2/meetings/{{ $json.id }}/recordings",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "zoomOAuth2Api",
        "options": {}
      },
      "id": "de3259ab-9f22-4c1d-9171-0eec07e520be",
      "name": "Zoom: Get transcripts data",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2420,
        -220
      ],
      "typeVersion": 4.2,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "GvkMMGjMdcsNDBlN",
          "name": "zoom-bot-UAI"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Actúa como un supervisor académico que evalúa de forma objetiva, clara y constructiva la calidad de una clase grabada en Zoom. Tu tarea es redactar un acta formal que resuma el desarrollo de la sesión, identifique puntos de mejora realistas y valore las oportunidades de crecimiento docente. Mantén un tono profesional, imparcial y empático: no sanciones, orienta.\n\nUtiliza los siguientes datos:\n\n- **Fecha programada de la clase:** {{ $('basic-info-depuration-II').item.json.startTimeLocal }}  \n- **Hora en la que el host inició la reunión:** {{ $('basic-info-depuration-I').item.json.startTimeLocal }}  \n- **Docente (host):** {{ $('Zoom: Get transcripts data').item.json.host_email }}\n\n---\n\n**Transcript crudo con tiempo** (útil para análisis de presencia y participación):  \n{{ $('Extract text from transcript file').item.json.data }}\n\n**Transcript limpio** (útil para redacción del acta):  \n{{ $('Format transcript text').item.json.transcript }}\n\n---\n\nRedacta el acta con la siguiente estructura:\n\n---\n\n### 📝 Acta de Reunión\n\n**📅 Fecha:** [En formato DD/MM/AAAA]  \n**🕐 Hora programada:** [Hora programada de la clase]  \n**🕐 Hora real de inicio del host:** [Hora registrada de inicio de la reunión]  \n\n---\n\n### 📚 Resumen general de la clase  \nRedacta un párrafo **breve** que describa el enfoque temático (si lo hay), nivel de preparación, claridad de objetivos, estructura y participación. Menciona aspectos positivos o destacables, pero también debilidades o áreas de mejora, usando **negrita** para resaltar hallazgos clave. Mantén un tono constructivo y profesional.\n\n---\n\n### 🔎 Observación sobre la presencia y participación del docente  \n1. Especifica si el docente inició la reunión antes, a tiempo o después de la hora programada.  \n2. Indica el **momento exacto en el transcript** (en segundos o formato `00:MM:SS`) en el que el docente habló por primera vez.  \n3. Evalúa si hubo **dilatación excesiva entre intervenciones** (por ejemplo, si hay más de 20 minutos sin participación del docente). Si ocurre, destácalo como una señal de posible desconexión o falta de conducción activa.  \n4. Usa un tono objetivo y orientado a la mejora profesional.\n\n---\n\n### 💬 Intervenciones destacadas o citas relevantes  \nSelecciona máximo 6 líneas directamente copiadas textualmente del transcript crudo con timestamp incluido, sin reformular ni parafrasear.  \nCada línea debe mantenerse **idéntica** a como aparece en la transcripción, incluyendo comillas, puntuación, pausas u onomatopeyas.  \nPresenta cada cita como un ítem de lista con viñeta tipo guion (`-`), en este formato:\n\n- \"Texto exacto de la intervención.\" (`00:00:00`)\n\n❗ No agregues introducciones, no resumas ni cambies la redacción. Mantén el estilo literal.\n\n---\n\n### 🌟 Sugerencias para la mejora docente  \nBrinda **solo 2 recomendaciones** puntuales para mejorar el desempeño docente, usando emojis y tono motivador.  \nEjemplos:\n\n- 📌 Establecer un objetivo claro y compartido al inicio  \n- 🧑‍🏫 Asegurar una presencia activa y constante durante la clase  \n- 🧰 Incorporar ejemplos o recursos visuales que refuercen el contenido  \n- 🎯 Guiar la participación de los estudiantes con preguntas relevantes  \n- 🗂️ Estructurar la sesión en secciones claras: introducción, desarrollo y cierre  \n- ⏱️ Controlar mejor el tiempo para mantener el ritmo y cubrir todos los puntos clave\n\nFinaliza con un mensaje positivo:\n\n> ✨ Cada clase ofrece una oportunidad para mejorar. Con pequeños ajustes en la preparación y conducción, esta experiencia puede transformarse en una sesión significativa para los estudiantes. ¡Adelante!\n\n---\n\n### ✅ Instrucciones finales  \n- Sé profesional, preciso y respetuoso.  \n- Usa **negrita** para resaltar los hallazgos clave.  \n- No inventes datos si no están disponibles.  \n- Evita repetir ideas y mantén el informe claro y enfocado.\n",
        "options": {}
      },
      "id": "a577ba19-2a6f-45d1-9676-7bd0cb035b9a",
      "name": "Create meeting summary",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -1340,
        -240
      ],
      "typeVersion": 1.9
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "recording-completed",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3180,
        -220
      ],
      "id": "8a5de542-78e8-4aab-aa01-e15fbf1c3c25",
      "name": "recording-completed",
      "webhookId": "a1a5385b-23c9-4096-be0f-66f260665f2f"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "get",
        "meetingId": "={{ $json.meetingId }}",
        "additionalFields": {}
      },
      "id": "0be3562a-4375-4312-a13d-bfd59e671ab6",
      "name": "Zoom: Get data by meetingId",
      "type": "n8n-nodes-base.zoom",
      "position": [
        -2800,
        -220
      ],
      "typeVersion": 1,
      "alwaysOutputData": false,
      "executeOnce": false,
      "retryOnFail": false,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "GvkMMGjMdcsNDBlN",
          "name": "zoom-bot-UAI"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1360,
        -20
      ],
      "id": "df946b34-8e2f-42ec-a814-5b919fad8643",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "sfJcS7f5MZWQ5awr",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const { object } = $json.body.payload;\n\n// Convertir start_time UTC a hora local (Perú)\nconst startTimeUTC = new Date(object.start_time);\n\nconst options = {\n  timeZone: 'America/Lima',\n  hour12: false,\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit',\n  hour: '2-digit',\n  minute: '2-digit',\n};\n\nconst startTimeLocal = startTimeUTC.toLocaleString('es-PE', options); // ejemplo: \"27/06/2025, 10:30\"\n\nreturn {\n  json: {\n    meetingId: object.id,\n    topic: object.topic,\n    startTimeUTC: object.start_time,\n    startTimeLocal: startTimeLocal,\n    uuid: object.uuid,\n    hostId: object.host_id\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2980,
        -220
      ],
      "id": "c34d6808-cce2-47aa-8e1d-39ed91cb33c6",
      "name": "basic-info-depuration-I"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $json;\n\n// Convertir start_time de UTC a hora local (Perú)\nconst startTimeUTC = new Date(data.start_time);\nconst options = {\n  timeZone: 'America/Lima',\n  hour12: false,\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit',\n  hour: '2-digit',\n  minute: '2-digit',\n};\nconst startTimeLocal = startTimeUTC.toLocaleString('es-PE', options); // Resultado: \"27/06/2025, 10:30\"\n\nreturn {\n  json: {\n    uuid: data.uuid,\n    id: data.id,\n    hostId: data.host_id,\n    hostEmail: data.host_email,\n    assistantId: data.assistant_id,\n    topic: data.topic,\n    type: data.type,\n    status: data.status,\n    startTimeUTC: data.start_time,\n    startTimeLocal: startTimeLocal,\n    duration: data.duration,\n    timezone: data.timezone,\n    agenda: data.agenda,\n    createdAt: data.created_at,\n    startUrl: data.start_url,\n    joinUrl: data.join_url\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2620,
        -220
      ],
      "id": "c44ae23b-fcd9-4a42-8855-9465a91099e8",
      "name": "basic-info-depuration-II"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "meeting-started",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3200,
        320
      ],
      "id": "98316a70-67ab-42a5-948e-baedcd28c73d",
      "name": "meeting-started",
      "webhookId": "4fee8b5a-8ff7-4686-a80d-82669b720f37"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cc51b7e4-d5c2-4cd4-9488-4d181eaaa02e",
              "name": "subject",
              "type": "string",
              "value": "=📄 Formulario de la clase: \"{{ $('meeting-info').item.json.meeting.topic }}\" - {{ $('meeting-info').item.json.meeting.startTime }}"
            },
            {
              "id": "f3940ea2-9084-4c25-828e-5ddaa428ec83",
              "name": "=to",
              "type": "string",
              "value": "={{ $('meeting-info').item.json.meeting.host.email }}"
            },
            {
              "id": "1211af5b-2240-44ce-9df7-63d93f57806e",
              "name": "body",
              "type": "string",
              "value": "=<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Tutor.IA - Mensaje</title>\n  <style>\n      * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-family: 'Arial', sans-serif;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            min-height: 100vh;\n            padding: 20px;\n        }\n        \n        .container {\n            max-width: 600px;\n            margin: 0 auto;\n            background: white;\n            border-radius: 20px;\n            box-shadow: 0 20px 40px rgba(0,0,0,0.1);\n            overflow: hidden;\n            animation: slideIn 0.8s ease-out;\n        }\n        \n        @keyframes slideIn {\n            from {\n                opacity: 0;\n                transform: translateY(30px);\n            }\n            to {\n                opacity: 1;\n                transform: translateY(0);\n            }\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);\n            padding: 30px;\n            text-align: center;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .header::before {\n            content: '';\n            position: absolute;\n            top: -50%;\n            left: -50%;\n            width: 200%;\n            height: 200%;\n            background: radial-gradient(circle, rgba(255,255,255,0.1) 1px, transparent 1px);\n            background-size: 20px 20px;\n            animation: float 20s linear infinite;\n        }\n        \n        @keyframes float {\n            0% { transform: rotate(0deg) translateX(0px); }\n            100% { transform: rotate(360deg) translateX(10px); }\n        }\n        \n        .logo {\n            width: 455px;\n            height: 120px;\n            margin: 0 auto 20px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            position: relative;\n            z-index: 1;\n            animation: pulse 2s infinite;\n            overflow: hidden;\n            border-radius: 15px;\n        }\n        \n        .logo img {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n            border-radius: 15px;\n        }\n        \n        @keyframes pulse {\n            0%, 100% { transform: scale(1); }\n            50% { transform: scale(1.05); }\n        }\n        \n        .company-name {\n            color: white;\n            font-size: 28px;\n            font-weight: bold;\n            position: relative;\n            z-index: 1;\n        }\n        \n        .content {\n            padding: 40px;\n        }\n        \n        .greeting {\n            font-size: 24px;\n            color: #2d3748;\n            margin-bottom: 30px;\n            font-weight: 600;\n        }\n        \n        .message {\n            font-size: 16px;\n            line-height: 1.8;\n            color: #4a5568;\n            margin-bottom: 30px;\n        }\n        \n        .link-section {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 25px;\n            border-radius: 15px;\n            margin: 30px 0;\n            text-align: center;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .link-section::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n            animation: shine 3s infinite;\n        }\n        \n        @keyframes shine {\n            0% { left: -100%; }\n            100% { left: 100%; }\n        }\n        \n        .link-section h3 {\n            margin-bottom: 15px;\n            position: relative;\n            z-index: 1;\n        }\n        \n        .link-section p {\n            position: relative;\n            z-index: 1;\n        }\n        \n        .link-section a {\n            color: #ffd700;\n            text-decoration: none;\n            font-weight: bold;\n            word-break: break-all;\n        }\n        \n        .link-section a:hover {\n            text-decoration: underline;\n        }\n        \n        .footer {\n            background: linear-gradient(135deg, #2d3748 0%, #4a5568 100%);\n            color: white;\n            padding: 30px;\n            text-align: center;\n        }\n        \n        .contact-info {\n            font-size: 14px;\n            color: rgba(255,255,255,0.8);\n        }\n        \n        @media (max-width: 600px) {\n            .container {\n                margin: 10px;\n                border-radius: 15px;\n            }\n            \n            .header, .content, .footer {\n                padding: 20px;\n            }\n            \n            .logo {\n                width: 290px;\n                height: 100px;\n            }\n            \n            .company-name {\n                font-size: 24px;\n            }\n            \n            .greeting {\n                font-size: 20px;\n            }\n        }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <div class=\"logo\">\n        <img src=\"https://drive.google.com/uc?id=1l22pb0dFRDVHnOs4ijKMQZlXI8hy5peG\" alt=\"Tutor.IA Logo\">\n      </div>\n    </div>\n    <div class=\"content\">\n      <div class=\"greeting\">¡Hola, {{ $('meeting-info').item.json.meeting.host.email }}! 😄</div>\n      <div class=\"message\">Se le comparte el link para que sus alumnos le den feedback a su clase.</div>\n      <div class=\"link-section\">\n        <p><a href=\"{{ $json.formLink }}\" target=\"_blank\">{{ $json.formLink }}</a></p>\n      </div>\n    </div>\n    <div class=\"footer\">\n      <div class=\"contact-info\">\n        <small>© 2025 Tutor.IA. Todos los derechos reservados.</small>\n      </div>\n    </div>\n  </div>\n</body>"
            },
            {
              "id": "de580983-c982-46c8-94c2-395580b1bee7",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "917c3151-04e1-498c-936c-74b9c0f0f5d0",
      "name": "Sort for mail",
      "type": "n8n-nodes-base.set",
      "position": [
        -2400,
        320
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "fromEmail": "tutor.ia@uai.edu.pe",
        "toEmail": "={{ $json.to }}",
        "subject": "={{ $json.subject }}",
        "html": "={{ $json.body }}",
        "options": {}
      },
      "id": "87bbcfb9-454b-4cc8-afe9-b530a7c7856b",
      "name": "Send url for students",
      "type": "n8n-nodes-base.emailSend",
      "position": [
        -2200,
        320
      ],
      "webhookId": "81c4f081-f3d1-44c3-a344-3f735f1873b5",
      "typeVersion": 2.1,
      "credentials": {
        "smtp": {
          "id": "WHrFKdYAukBTJHKs",
          "name": "SMTP tutor.ia@uai.edu.pe"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "get",
        "meetingId": "={{ $json.body.payload.object.id }}",
        "additionalFields": {}
      },
      "id": "19158866-7533-4dea-a659-1822acef19dc",
      "name": "Zoom: Get-data-by-meetingId",
      "type": "n8n-nodes-base.zoom",
      "position": [
        -3020,
        320
      ],
      "typeVersion": 1,
      "alwaysOutputData": false,
      "executeOnce": false,
      "retryOnFail": false,
      "credentials": {
        "zoomOAuth2Api": {
          "id": "GvkMMGjMdcsNDBlN",
          "name": "zoom-bot-UAI"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const object = $json;\n\n// Convertir start_time UTC a hora local (Perú)\nconst startTimeUTC = new Date(object.start_time);\n\nconst options = {\n  timeZone: \"America/Lima\",\n  hour12: false,\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n};\n\nconst startTimeLocal = startTimeUTC.toLocaleString(\"es-PE\", options); // ejemplo: \"27/06/2025, 10:30\"\n\nreturn {\n  json: {\n    meeting: {\n      id: object.id,\n      uuid: object.uuid,\n      topic: object.topic,\n      startTime: startTimeLocal,\n      status: object.status,\n      duration: object.duration,\n      host: {\n      id: object.host_id,\n      email: object.host_email,\n    },\n    }\n  },\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2820,
        320
      ],
      "id": "69cf544f-72be-4c20-8886-f77df17ed858",
      "name": "meeting-info"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "participant-joined",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3200,
        520
      ],
      "id": "df4ed61e-a691-4aa6-88fc-2e57d0ed1942",
      "name": "participants-joined",
      "webhookId": "285cc8ab-496b-4780-9f5a-46c9ef5dd1bd"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://known-moth-included.ngrok-free.app/ms/v1/meeting/save",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"payload\": {\n    \"object\": {\n      \"id\": {{ $json.meeting.id }},\n      \"uuid\": \"{{ $json.meeting.uuid }}\",\n      \"topic\": \"{{ $json.meeting.topic }}\",\n      \"start_time\": \"{{ $json.meeting.startTime }}\",\n      \"status\": \"{{ $json.meeting.status }}\",\n      \"duration\": {{ $json.meeting.duration }},\n      \"host_id\": \"{{ $json.meeting.host.id }}\",\n      \"host_email\": \"{{ $json.meeting.host.email }}\",\n    }\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2760,
        140
      ],
      "id": "a0577e52-5c53-44a3-bf2a-63adf85efd80",
      "name": "/ms/v1/meeting/save"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const eventObject = $json.body.payload.object;\nconst participant = eventObject.participant;\n\n// Convertir start_time UTC a hora local (Perú)\nconst joinTimeUTC = new Date(participant.join_time);\n\nconst options = {\n  timeZone: \"America/Lima\",\n  hour12: false,\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n};\n\nconst joinTimeLocal = joinTimeUTC.toLocaleString(\"es-PE\", options);\n\nreturn {\n  json: {\n    meeting: {\n      id: eventObject.id,\n      uuid: eventObject.uuid,\n    },\n    participant: {\n      id: participant.id,\n      user_id: participant.user_id,\n      participant_user_id: participant.participant_user_id || null,\n      user_name: participant.user_name,\n      email: participant.email || null,\n      join_time: joinTimeLocal,\n      isHost: participant.participant_user_id === eventObject.host_id,\n    },\n    host_id: eventObject.host_id,\n  },\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2960,
        520
      ],
      "id": "538d2fd0-7cd9-4811-8642-42f9ffcbae85",
      "name": "participant-info"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://known-moth-included.ngrok-free.app/ms/v1/participant/save",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"payload\": {\n    \"object\": {\n      \"user_id\": \"{{ $json.participant.user_id }}\",\n      \"participant_user_id\": \"{{ $json.participant.participant_user_id }}\",\n      \"user_name\": \"{{ $json.participant.user_name }}\",\n      \"email\": \"{{ $json.participant.email }}\",\n      \"join_time\": \"{{ $json.participant.join_time }}\",\n      \"isHost\": {{ $json.participant.isHost }},\n      \"host_id\": \"{{ $json.host_id }}\",\n      \"meeting_id\": \"{{ $json.meeting.id }}\",\n      \"meeting_uuid\": \"{{ $json.meeting.uuid }}\"\n    }\n  }\n}\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2760,
        520
      ],
      "id": "d453e00f-699e-4eb8-bda2-29a8ddcc5e08",
      "name": "/ms/v1/participant/save"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "getAll",
        "returnAll": true,
        "filters": {}
      },
      "type": "n8n-nodes-base.zoom",
      "typeVersion": 1,
      "position": [
        -3000,
        720
      ],
      "id": "55d03252-3bd3-481a-8776-25c972ac9538",
      "name": "Get many meetings",
      "credentials": {
        "zoomOAuth2Api": {
          "id": "GvkMMGjMdcsNDBlN",
          "name": "zoom-bot-UAI"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const uniqueMeetingsMap = new Map();\n\nitems\n  .sort((a, b) => new Date(b.json.created_at) - new Date(a.json.created_at))\n  .forEach(item => {\n    const now = new Date();\n    const start = new Date(item.json.start_time);\n    const end = new Date(start.getTime() + item.json.duration * 60000);\n\n    let estado = '';\n    if (now < start) {\n      estado = 'pendiente';\n    } else if (now >= start && now <= end) {\n      estado = 'en curso';\n    } else {\n      estado = 'finalizado';\n    }\n\n    // Solo agrega si aún no existe una reunión con este ID\n    if (!uniqueMeetingsMap.has(item.json.id)) {\n      uniqueMeetingsMap.set(item.json.id, {\n        json: {\n          ...item.json,\n          estado,\n        }\n      });\n    }\n  });\n\n// Tomar los primeros 15 elementos únicos\nreturn Array.from(uniqueMeetingsMap.values()).slice(0, 15);\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2780,
        720
      ],
      "id": "d36403af-5ba6-413f-bf96-a1678255cb86",
      "name": "add status field"
    },
    {
      "parameters": {
        "path": "/api/reuniones/get-all",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3200,
        720
      ],
      "id": "aeff65c4-4465-46a5-b239-452a9761efb3",
      "name": "api/reuniones",
      "webhookId": "ff2fd24c-2119-42f3-bd3e-ec5e3921d1f3"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -2560,
        720
      ],
      "id": "0454975a-f25e-4c0a-ae08-6aae6f921440",
      "name": "endpoint"
    },
    {
      "parameters": {
        "jsCode": "const uriBase = \"https://encuesta-l2blq.web.app\"\nconst idMeeting = $input.first().json.meeting.id\nconst idHost = $input.first().json.meeting.host.id\n\nreturn {\n  formLink: `${uriBase}/${idMeeting}/${idHost}`\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2620,
        320
      ],
      "id": "dced28b1-6655-41c6-8549-719fa5eb9448",
      "name": "encuesta - link"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cc51b7e4-d5c2-4cd4-9488-4d181eaaa02e",
              "name": "subject",
              "type": "string",
              "value": "=📢 Resumen de la Clase: \"{{ $('Zoom: Get data by meetingId').item.json.topic }}\" - {{ DateTime.fromISO($('Zoom: Get data by meetingId').item.json.start_time).toFormat('yyyy-MM-dd HH:mm') }}"
            },
            {
              "id": "f3940ea2-9084-4c25-828e-5ddaa428ec83",
              "name": "=to",
              "type": "string",
              "value": "=hola@uai.edu.pe"
            },
            {
              "id": "1211af5b-2240-44ce-9df7-63d93f57806e",
              "name": "body",
              "type": "string",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4c4d7bf4-f874-4c6f-9384-f49876f8d9a7",
      "name": "TEST - Sort for mail delivery",
      "type": "n8n-nodes-base.set",
      "position": [
        -920,
        -20
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "meeting-created",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3200,
        140
      ],
      "id": "0f2bf8bd-7c5b-4b6f-adbe-845ad963438c",
      "name": "meeting-created",
      "webhookId": "e16d2b77-53a2-4c2b-a1b0-c184e1118753"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const meeting = $json.body.payload.object;\nconst operatorEmail = $json.body.payload.operator;\n\n// Convertir start_time UTC a hora local (Perú)\nconst startTimeUTC = new Date(meeting.start_time);\n\nconst options = {\n  timeZone: \"America/Lima\",\n  hour12: false,\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n};\n\nconst startTimeLocal = startTimeUTC.toLocaleString(\"es-PE\", options);\n\nreturn {\n  json: {\n    meeting: {\n      id: meeting.id,\n      uuid: meeting.uuid,\n      topic: meeting.topic,\n      startTime: startTimeLocal,\n      status: \"pending\",\n      duration: meeting.duration,\n      host: {\n        id: meeting.host_id,\n        email: operatorEmail || \"\",\n      },\n    },\n  },\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2960,
        140
      ],
      "id": "0ca75614-da2a-486f-80e4-9137d5fac716",
      "name": "meeting-info1"
    }
  ],
  "pinData": {},
  "connections": {
    "Format to html": {
      "main": [
        [
          {
            "node": "Send meeting summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter transcript URL": {
      "main": [
        [
          {
            "node": "Zoom: Get transcript file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create meeting summary": {
      "main": [
        [
          {
            "node": "TEST - Sort for mail delivery",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format transcript text": {
      "main": [
        [
          {
            "node": "Zoom: Get participants data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort for mail delivery": {
      "main": [
        []
      ]
    },
    "Zoom: Get transcript file": {
      "main": [
        [
          {
            "node": "Extract text from transcript file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zoom: Get transcripts data": {
      "main": [
        [
          {
            "node": "Filter transcript URL",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Recording/Transcript available",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zoom: Get participants data": {
      "main": [
        [
          {
            "node": "Create meeting summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract text from transcript file": {
      "main": [
        [
          {
            "node": "Format transcript text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zoom: Get data by meetingId": {
      "main": [
        [
          {
            "node": "basic-info-depuration-II",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "recording-completed": {
      "main": [
        [
          {
            "node": "basic-info-depuration-I",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Create meeting summary",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "basic-info-depuration-I": {
      "main": [
        [
          {
            "node": "Zoom: Get data by meetingId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "basic-info-depuration-II": {
      "main": [
        [
          {
            "node": "Zoom: Get transcripts data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "meeting-started": {
      "main": [
        [
          {
            "node": "Zoom: Get-data-by-meetingId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort for mail": {
      "main": [
        [
          {
            "node": "Send url for students",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zoom: Get-data-by-meetingId": {
      "main": [
        [
          {
            "node": "meeting-info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "meeting-info": {
      "main": [
        [
          {
            "node": "encuesta - link",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "participants-joined": {
      "main": [
        [
          {
            "node": "participant-info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "participant-info": {
      "main": [
        [
          {
            "node": "/ms/v1/participant/save",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many meetings": {
      "main": [
        [
          {
            "node": "add status field",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "add status field": {
      "main": [
        [
          {
            "node": "endpoint",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "api/reuniones": {
      "main": [
        [
          {
            "node": "Get many meetings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "encuesta - link": {
      "main": [
        [
          {
            "node": "Sort for mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TEST - Sort for mail delivery": {
      "main": [
        [
          {
            "node": "Format to html",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "meeting-created": {
      "main": [
        [
          {
            "node": "meeting-info1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "meeting-info1": {
      "main": [
        [
          {
            "node": "/ms/v1/meeting/save",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "47b1b1b5-392e-4b4c-8180-450d422bafd0",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "44e428a6215583099d0174473a6ca8f47ec4ace791e57f79f0b224a51c9b8d2b"
  },
  "id": "iKVmVGRXVvXSPtxf",
  "tags": []
}